using UnityEngine;

public class CLSCSystem : MonoBehaviour
{
    const float UPDATE_MULTIPLIER = 0.02f;
    public int updateTimer = 0, tickSecond = 0;

    public CLSCBuildings buildingSystem;
    public CLSCUpgrades upgradeSystem;
    public CLSCFeverSystem feverSystem = new CLSCFeverSystem();
    public CLSCSaveData clscData = GameManagement.profile.clscSaveData;
    public CLSCInterface clscInterface;

    void Start()
    {
        clscInterface = gameObject.AddComponent<CLSCInterface>();
        buildingSystem = gameObject.AddComponent<CLSCBuildings>();
        upgradeSystem = gameObject.AddComponent<CLSCUpgrades>();
    }

    void Update()
    {
        buildingSystem.UpdateSystem();
    }

    void FixedUpdate()
    {
        // ACTIVATE ALL EXPENSIVE SYSTEM UPDATES EVERY HALF SECOND
        if (++updateTimer == 29)
        {
            upgradeSystem.UpdateSystem();

            updateTimer = 0;
        }

        if (++tickSecond == 59)
        {
            ++clscData.misc.TimePlayed;

            GameManagement.profile.achievements.CheckAchievements();

            tickSecond = 0;
        }

        if (updateTimer % 1 == 0)
        {
            // 30 updates/sec ; Multiply increments by 0.02 to match update rate
            
            double revenue = clscData.BitsPerSecond * UPDATE_MULTIPLIER;

            // Update the accumulative amount of bits generated by buildings
            clscData.buildingsData.ForEach(building =>
            building.UpdateAccumulativeValue(UPDATE_MULTIPLIER));

            if (feverSystem.isActive)
            {
                revenue *= clscData.feverData.BPSMultiplier;
                ++clscData.feverData.TimeActive;
            }

            clscData.AddToCurrency(revenue);
        }

        feverSystem.UpdateSystem();
    }

    public void Click()
    {
        // Increment total clicks
        ++clscData.TotalClicks; 

        // Add base click power
        double finalClickPower = clscData.ClickPower; 

        // Add any building modifiers
        clscData.buildingsData.ForEach(building =>
        finalClickPower += building.GetClickPowerModifiers());

        // Fuel fever and add fever modifiers
        feverSystem.FuelFever();
        if (feverSystem.isActive)
        {
            finalClickPower *= feverSystem.FeverData.ClickMultiplier;
        }

        // Add the final amount to stored currency
        clscData.AddToCurrency(finalClickPower);

        // Display the number of bits earned
        clscInterface.clickPopups.Broadcast($"+ { BitNotation.ToBitNotation(finalClickPower, "#,0.#") } bits", StatusType.NEWS);
    }

    public void PurchaseUpgrade(CLSCUpgradeButton upgrade)
    {
        UpgradeData targetUpgrade = clscData.upgradesData.Find(upgradeData => upgradeData.Name == upgrade.title.text);

        // If currency (rounded up) meets the required price, activate upgrade.
        if (clscData.GetCurrencyCurrent() >= targetUpgrade.Price)
        {
            targetUpgrade.Purchase();
            upgradeSystem.RefreshUpgrades();
            
            clscInterface.generalMessages.Broadcast($"You've purchased {targetUpgrade.Name}!", StatusType.NEWS);

            buildingSystem.UpdateBPS();
        }
        clscInterface.tooltip.HideTooltip();
    }
}